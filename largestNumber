public class Solution {
    public String largestNumber(int[] nums) {
        StringBuilder res = new StringBuilder();
        if (nums == null || nums.length == 0) {
        	return res.toString();
        }
        Integer[] copy = new Integer[nums.length];
        for (int i = 0; i < nums.length; i++) {
            copy[i] = nums[i];
        }
        Arrays.sort(copy, new IntComparator());
        if (copy[0] == 0) {
            return "0";
        }
        
        for (int i : copy) {
        	res.append(i);
        }
        
        return res.toString();
    }
    

}
class IntComparator implements Comparator<Integer> {
    	@Override
    	public int compare(Integer a, Integer b) {
            String s1 = String.valueOf(a) + String.valueOf(b);
            String s2 = String.valueOf(b) + String.valueOf(a);
            for (int i = 0; i < s1.length(); i++) {
                if (s1.charAt(i) > s2.charAt(i)) {
                    return -1;
                }
                if (s1.charAt(i) < s2.charAt(i)) {
                    return 1;
                }
            }
            
            return 0;
    	}

	}
