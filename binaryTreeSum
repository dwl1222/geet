
public List<TreeNode> findPath(TreeNode root, int sum) {
	return helper(root, new HashSet<Integer>(), sum);
}

public TreeNode helper(TreeNode root, HashSet<Integer> set, int sum) {
	if (root == null) {
		return null;
	}
	
	TreeNode left = helper(root.left, set, sum);
	if (left != null) {
		return left;
	}
	
	TreeNode right = helper(root.right, set, sum);
	if (right != null) {
		return right;
	}
	
	if (set.isEmpty()) {
		set.add(root.val);
	}
	else {
		for (int i : set) {
			HashSet<Integer> temp = new HashSet<>();
			temp.add(i + root.val);
		}
		set = temp;
	}
	if (set.contains(sum)) {
		return root;
	}
	
	return null;
}
