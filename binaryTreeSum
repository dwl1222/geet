
public List<TreeNode> findPath(TreeNode root, int sum) {
	return helper(root, new HashSet<Integer>(), sum);
}

public TreeNode helper(TreeNode root, HashSet<Integer> set, int sum) {
	if (root == null) {
		return null;
	}
	
	HashSet<Integer> lset = new HashSet<>();
	TreeNode left = helper(root.left, lset, sum);
	if (left != null) {
		return left;
	}
	
	HashSet<Integer> rset = new HashSet<>();
	TreeNode right = helper(root.right, rset, sum);
	if (right != null) {
		return right;
	}
	
	for (int i : lset) {
		set.add(i + root.val);
	}
	for (int i : rset) {
		set.add(i + root.val);
	}
	if (set.contains(sum)) {
		return root;
	}
	
	return null;
}
