import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode (int val) {
            this.val = val;
        }
    }
    
    public static void buildTree(LinkedList<TreeNode> list, BufferedReader br, String s) throws IOException{
        int numOfNodes = Integer.parseInt(s);
        for (int i = 0; i < numOfNodes; i ++) {
            String[] line = br.readLine().split("\\s+");
            int left = Integer.parseInt(line[0]);
            int right = Integer.parseInt(line[1]);
            TreeNode cur = list.poll();
            if (left != -1) {
                cur.left = new TreeNode(left);
                list.add(cur.left);
            }
            if (right != -1) {
                cur.right = new TreeNode (right);
                list.add(cur.right);
            }
        }
    }
    
    public static void swap(TreeNode root, int k) {
        int level = 1;
        List<TreeNode> curLevel = new ArrayList<TreeNode>();
        curLevel.add(root);
        while (!curLevel.isEmpty()) {
            List<TreeNode> nextLevel = new ArrayList<TreeNode>();
            if (level == k) {
                for (TreeNode cur : curLevel) {
                    TreeNode temp = cur.left;
                    cur.left = cur.right;
                    cur.right = temp;
                }
                k += k;
            }
            for (TreeNode cur : curLevel) {
                if (cur.left != null) {
                    nextLevel.add(cur.left);
                }
                if (cur.right != null) {
                    nextLevel.add(cur.right);
                }
            }
            curLevel = nextLevel;
            level ++;
        }
    }
    
    public static void inOrder(TreeNode root) {
        if (root == null) {
            return;
        }
        inOrder(root.left);
        System.out.print(root.val + " ");
        inOrder(root.right);
    }
    
    public static void main(String[] args) throws IOException{
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        TreeNode root = new TreeNode(1);
        LinkedList<TreeNode> list = new LinkedList<>();
        list.add(root);
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String s = br.readLine();
        if (s != null) {
            buildTree(list, br, s);
        }
        s = br.readLine();
        if (s != null) {
            int numOfSwap = Integer.parseInt(s);
            for (int i = 0; i < numOfSwap; i++) {
                int k = Integer.parseInt(br.readLine());
                swap(root, k);
                inOrder(root);
                System.out.println();
            }

        }
    }
}
