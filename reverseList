/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    // recursion 
    // mistake: forget head.next = null
    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode newHead = reverseList(head.next);
        ListNode cur = newHead;
        while (cur.next != null) {
            cur = cur.next;
        }
        cur.next = head;
        head.next = null;
        
        return newHead;
    }
    
    // iterative
        public ListNode reverseList(ListNode head) {
        if (head == null) {
            return head;
        }
        
        ListNode last = head;
        while (last.next != null) {
            last = last.next;
        }
        
        while (head != last) {
            ListNode next = head.next;
            head.next = last.next;
            last.next = head;
            head = next;
        }
        
        return last;
    }
}
