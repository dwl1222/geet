/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    // TLE
    // O(n)
    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }

        
        return countNodes(root.left) + countNodes(root.right) + 1;
    }
    
    //
    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }
        if (getLeftHeight(root) == getRightHeight(root)) {
            return (1 << getLeftHeight(root)) - 1;
        }
        return countNodes(root.left) + countNodes(root.right) + 1;
    }
    
    public int getLeftHeight(TreeNode root) {
        int res = 0;
        while (root != null) {
            root = root.left;
            res++;
        }
        
        return res;
    }
    
    public int getRightHeight(TreeNode root) {
        int res = 0;
        while (root != null) {
            root = root.right;
            res++;
        }
        
        return res;
    }

}
