/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    public int read(char[] buf, int n) {
        char[] temp = new char[4];
        int count = 0;
        boolean eof = false;
        while (count < n && !eof) {
            int curCount = read4(temp);
            eof = curCount < 4 ? true : false;
            int need = Math.min(curCount, n - count);
            for (int j = 0; j < need; j ++) {
                buf[count ++] = temp[j];
            }
        }
        
        return count;
    }
}

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
     
    char[] temp = new char[4];
    int offset = 0;
    int curCount = 0;
    public int read(char[] buf, int n) {
        int count = 0;
        boolean eof = false;
        int actRead = 0;
        while (count < n && !eof) {
            if (curCount == 0) {
                curCount = read4(temp);
                eof = curCount < 4 ? true : false;
            }
            actRead = Math.min(n - count, curCount);
            for (int i = 0; i < actRead; i ++) {
                buf[count ++] = temp[offset + i];
            }
            
            curCount -= actRead;
            offset = (offset + actRead) % 4;
        }
        
        return count;
    }
}
