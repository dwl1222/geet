/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<>();
        pathSum(root, sum, new ArrayList<Integer>(), res);
        return res;
    }
    
    public void pathSum(TreeNode root, int sum, List<Integer> curPath, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
    	if (root.left == null && root.right == null && root.val == sum) {
    		curPath.add(root.val);
    		res.add(new ArrayList(curPath));
    		curPath.remove(curPath.size() - 1);
    		return;
    	}
    	
    	curPath.add(root.val);
    	pathSum(root.left, sum - root.val, curPath, res);
    	pathSum(root.right, sum - root.val, curPath, res);
    	curPath.remove(curPath.size() - 1);    	
	
    	return;
    }
}
