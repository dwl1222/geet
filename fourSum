public class Solution {

    // Runtime O(n^2) Space O(1);
    // Error Line 17 forgot j != i+1
    // line 25 26 forgot l++ r--
    // line 28 31 l - 1 r + 1
    public List<List<Integer>> fourSum(int[] num, int target) {
        List<List<Integer>> res = new ArrayList<>();
        if (num == null || num.length < 4) {
            return res;
        }
        
        Arrays.sort(num);
        for (int i = 0; i < num.length - 3; i++) {
            if (i != 0 && num[i] == num[i - 1]) {
                continue;
            }
            for (int j = i + 1; j < num.length - 2; j++) {
                if (j != i + 1 && num[j] == num[j - 1]) {
                    continue;
                }
                int l = j + 1, r = num.length - 1;
                while (l < r) {
                    if (num[i] + num[j] + num[l] + num[r] == target) {
                        res.add(Arrays.asList(num[i], num[j], num[l], num[r]));
                        l++;
                        r--;
                        while (l < r && num[l] == num[l - 1]) {
                            l++;
                        }
                        while (l < r && num[r] == num[r + 1]) {
                            r--;
                        }
                    }
                    else if (num[i] + num[j] + num[l] + num[r] < target) {
                        l++;
                    }
                    else {
                        r--;
                    }
                }
            }
        }
        
        return res;
    }
}
