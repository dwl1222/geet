/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode> parentStack = new Stack<>();
        List<Integer> res = new ArrayList<>();
        TreeNode lastVisitedNode = null;
        while (root != null || !parentStack.isEmpty()) {
        	if (root != null) {
        		parentStack.push(root);
        		root = root.left;
        	}
        	else {
        		TreeNode peekNode = parentStack.peek();
        		if (peekNode.right != null && lastVisitedNode != peekNode.right) {
        			root = peekNode.right;
        		}
        		else {
        			res.add(parentStack.pop().val);
        			lastVisitedNode = peekNode;
        		}
        	}
        }
        
        return res;
    }
}
